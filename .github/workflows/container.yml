name: Container Image Builds

on:
  push:
    branches: [main, stable, oldstable]
    tags: ["v*"]
  pull_request:
    branches: [main, stable, oldstable]
  workflow_dispatch:

jobs:
  build-push-debian-stable-container:
    name: Build and push debian:stable container
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: determine-tags-action
        uses: ./.github/actions/determine-tags-action
      - name: "Setup meta information debian:stable"
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ github.repository }}
          labels: |
            org.opencontainers.image.vendor=Greenbone
            org.opencontainers.image.base.name=debian:stable-slim
          flavor: latest=false # no auto latest container tag for git tags
          tags: |
            # when IS_LATEST_TAG is set create a stable and a latest tag
            type=raw,value=latest,enable=${{ env.IS_LATEST_TAG }}
            type=raw,value=stable,enable=${{ env.IS_LATEST_TAG }}
            # if tag version is set than create a version tags
            type=semver,pattern={{version}},enable=${{ env.IS_VERSION_TAG }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ env.IS_VERSION_TAG }}
            type=semver,pattern={{major}},enable=${{ env.IS_VERSION_TAG }}
            # if we are on the main branch set edge
            type=edge,branch=main
            # use branch-sha otherwise for pushes to branches other then main (will not be uploaded)
            type=raw,value={{branch}}-{{sha}},enable=${{ github.ref_type == 'branch' && github.event_name == 'push' && github.ref_name != 'main' }}
            # use pr-$PR_ID for pull requests (will not be uploaded)
            type=ref,event=pr
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Container image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' && (github.ref_type == 'tag' || github.ref_name == 'main') }}
          file: .docker/prod.Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-push-debian-oldstable-container:
    name: Build and push debian:oldstable container
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: determine-tags-action
        uses: ./.github/actions/determine-tags-action
      - name: "Setup meta information debian:oldstable"
        id: old_stable_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ github.repository }}
          labels: |
            org.opencontainers.image.vendor=Greenbone
            org.opencontainers.image.base.name=debian:stable-slim
          flavor: latest=false # no auto latest container tag for git tags
          tags: |
            # for the images provided for debian:oldstable we just provide
            # oldstable on an new version or oldstable-edge when it is on main.
            # oldstable-branch-sha on a branch
            type=raw,value=oldstable,enable=${{ env.IS_LATEST_TAG }}
            type=raw,value=oldstable-edge,enable=${{ github.ref_name == 'main' }}
            type=raw,value=oldstable-{{branch}}-{{sha}},enable=${{ github.ref_type == 'branch' && github.event_name == 'push' && github.ref_name != 'main' }}
            type=ref,event=pr
      - name: Build and push Container image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' && (github.ref_type == 'tag' || github.ref_name == 'main') }}
          file: .docker/prod-oldstable.Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.old_stable_meta.outputs.tags }}
          labels: ${{ steps.old_stable_meta.outputs.labels }}

  build-push-debian-testing-container:
    name: Build and push debian:testing container
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: determine-tags-action
        uses: ./.github/actions/determine-tags-action
      - name: "Setup meta information debian:testing"
        id: testing_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ github.repository }}
          labels: |
            org.opencontainers.image.vendor=Greenbone
            org.opencontainers.image.base.name=debian:testing-slim
          flavor: latest=false # no auto latest container tag for git tags
          tags: |
            # for the images provided for debian:testing we just provide
            # testing on an new version or testing-edge when it is on main.
            # testing-branch-sha on a branch
            type=raw,value=testing,enable=${{ env.IS_LATEST_TAG }}
            type=raw,value=testing-edge,enable=${{ github.ref_name == 'main' }}
            type=raw,value=testing-{{branch}}-{{sha}},enable=${{ github.ref_type == 'branch' && github.event_name == 'push' && github.ref_name != 'main' }}
            type=ref,event=pr
      - name: Build and push Container image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' && (github.ref_type == 'tag' || github.ref_name == 'main') }}
          file: .docker/prod-testing.Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.testing_meta.outputs.tags }}
          labels: ${{ steps.testing_meta.outputs.labels }}

  # triggers projects that work with stable branches on a new stable tag
  trigger-stable-projects:
    needs: build-push-debian-stable-container
    if: github.ref_type == 'tag' && startsWith(github.ref_name, 'v')
    name: Trigger update container images in related projects for new tags
    strategy:
      fail-fast: false
      matrix:
        repository: ["greenbone/gvmd", "greenbone/gsad"]
    runs-on: ubuntu-latest
    steps:
      - name: Trigger ${{ matrix.repository }} build container image build
        uses: greenbone/actions/trigger-workflow@v3
        with:
          token: ${{ secrets.GREENBONE_BOT_TOKEN }}
          repository: ${{ matrix.repository }}
          workflow: build-container.yml
          ref: main
      - name: Trigger ${{ matrix.repository }} container image build
        uses: greenbone/actions/trigger-workflow@v3
        with:
          token: ${{ secrets.GREENBONE_BOT_TOKEN }}
          repository: ${{ matrix.repository }}
          workflow: container.yml
          ref: main

  trigger-related-projects:
    needs: build-push-debian-stable-container
    if: github.event_name != 'pull_request'
    name: Trigger update container images in related projects
    strategy:
      fail-fast: false
      matrix:
        repository:
          - "greenbone/openvas-scanner"
          - "greenbone/boreas"
    runs-on: ubuntu-latest
    steps:
      - name: Trigger main ${{ matrix.repository }} container image build
        uses: greenbone/actions/trigger-workflow@v3
        with:
          token: ${{ secrets.GREENBONE_BOT_TOKEN }}
          repository: ${{ matrix.repository }}
          workflow: ${{ matrix.repository == 'greenbone/openvas-scanner' && 'control.yml' || 'container.yml' }}
          ref: main
