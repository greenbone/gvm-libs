name: Container Image Builds

on:
  push:
    branches: [ stable ]
    tags: ["v*"]
  workflow_dispatch:

jobs:
  build:
    name: "Upload images for building gvm-libs"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Find reference branch
        uses: greenbone/actions/container-image-tags@v1
        id: container
        with:
          image-name: ${{ github.repository }}-build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: echo "Build and push ${{ steps.container.outputs.image-tags }}"
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.container.outputs.image-tags }}
          platforms: linux/amd64,linux/arm64
          file: .docker/build.Dockerfile

  production:
    name: "Upload production image"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Gather container image tags
        uses: greenbone/actions/container-image-tags@v1
        id: container
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Container image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.container.outputs.image-tags }}
          platforms: linux/amd64,linux/arm64
          file: .docker/prod.Dockerfile

  trigger-related-projects:
    needs: production
    name: "Trigger update docker images in related projects"
    runs-on: ubuntu-latest
    steps:
      - name: Trigger main openvas-scanner container image build
        run: |
          curl -X POST https://api.github.com/repos/greenbone/openvas-scanner/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -u greenbonebot:${{ secrets.GREENBONE_BOT_TOKEN }} \
          --data '{"event_type": "update-main-images"}'
      - name: Trigger main gvmd container image build
        run: |
          curl -X POST https://api.github.com/repos/greenbone/gvmd/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -u greenbonebot:${{ secrets.GREENBONE_BOT_TOKEN }} \
          --data '{"event_type": "update-main-images"}'
      - name: Trigger main gsad container image build
        run: |
          curl -X POST https://api.github.com/repos/greenbone/gsad/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -u greenbonebot:${{ secrets.GREENBONE_BOT_TOKEN }} \
          --data '{"event_type": "update-main-images"}'
