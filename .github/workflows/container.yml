name: Container Image Builds

on:
  push:
<<<<<<< HEAD
    branches: [ stable ]
=======
    branches: [ main, stable, oldstable ]
>>>>>>> 3145e06 (Change: Build container images for pull requests too)
    tags: ["v*"]
  pull_request:
    branches: [ main, stable, oldstable ]
  workflow_dispatch:

jobs:
  build:
    name: Build Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup container meta information
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ github.repository }}-build
          labels: |
            org.opencontainers.image.vendor=Greenbone
            org.opencontainers.image.base.name=debian/stable-slim
          flavor: latest=false # no latest container tag for git tags
          tags: |
            # create container tag for git tags
            type=ref,event=tag
            type=ref,event=pr
            # use latest for stable branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'stable') }}
            type=raw,value=stable,enable=${{ github.ref == format('refs/heads/{0}', 'stable') }}
            type=raw,value=oldstable,enable=${{ github.ref == format('refs/heads/{0}', 'oldstable') }}
            # use unstable for main branch
            type=raw,value=unstable,enable={{is_default_branch}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: echo "Build and push ${{ steps.container.outputs.image-tags }}"
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          file: .docker/build.Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  production:
    name: Production Images
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup container meta information
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ github.repository }}
          labels: |
            org.opencontainers.image.vendor=Greenbone
            org.opencontainers.image.base.name=debian/stable-slim
          flavor: latest=false # no latest container tag for git tags
          tags: |
            # create container tag for git tags
            type=ref,event=tag
            type=ref,event=pr
            # use latest for stable branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'stable') }}
            type=raw,value=stable,enable=${{ github.ref == format('refs/heads/{0}', 'stable') }}
            type=raw,value=oldstable,enable=${{ github.ref == format('refs/heads/{0}', 'oldstable') }}
            # use unstable for main branch
            type=raw,value=unstable,enable={{is_default_branch}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Container image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          file: .docker/prod.Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  trigger-related-projects:
    needs: production
    if: github.event_name != 'pull_request'
    name: Trigger update container images in related projects
    runs-on: ubuntu-latest
    steps:
      - name: Trigger main openvas-scanner container image build
        run: |
          curl -X POST https://api.github.com/repos/greenbone/openvas-scanner/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -u greenbonebot:${{ secrets.GREENBONE_BOT_TOKEN }} \
          --data '{"event_type": "update-main-images"}'
      - name: Trigger main gvmd container image build
        run: |
          curl -X POST https://api.github.com/repos/greenbone/gvmd/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -u greenbonebot:${{ secrets.GREENBONE_BOT_TOKEN }} \
          --data '{"event_type": "update-main-images"}'
      - name: Trigger main gsad container image build
        run: |
          curl -X POST https://api.github.com/repos/greenbone/gsad/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -u greenbonebot:${{ secrets.GREENBONE_BOT_TOKEN }} \
          --data '{"event_type": "update-main-images"}'
